# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Test and deploy SQL assets
'on':
  push:
    branches:
      - main
jobs:
  sql_testing:
    runs-on: ubuntu-latest
    # container:
    #   image:  ubuntu:latest
    services:
      # Label used to access the service container
      mssql:
        # Docker Hub image
        image: mcr.microsoft.com/mssql/server
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password1!
        # options: -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Password1!'
        ports:
          - 1433:1433
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      # - run: echo ${{ job.services.mssql.id }}
      # - run: echo ${{ job.services.mssql.network }}
      # - run: sqlcmd -?
      # - run: docker-compose up -d
      # - name: Sleep for 30 seconds
      #   uses: jakejarvis/wait-action@master
      #   with:
      #     time: '30s'
      # - name: wait for SQL Server
      #   uses: iFaxity/wait-on-action@v1
      #   with:
      #     resource: tcp:1433
      # - run: docker ps -a
      # - run: sqlcmd -S mssql -U sa -P Password1! -Q "SET PARSEONLY ON; SELECT GETDATE()"
      # - run: cat output.txt
      # - name: Set up Bazel
        # run: npm i @bazel/bazelisk
      - run: npm i @bazel/bazelisk
      # - run: sqlcmd -S localhost -U sa -P Password1! -Q "SELECT DB_NAME()"
      - name: Execute unit test
        run: bazelisk test //...
  sql_deploy:
    needs: sql_testing
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
  runner_test:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: dir