# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Testing
on: [pull_request]
jobs:
  unit_test:
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{ secrets.SA_PASSWORD }}
        ports:
          - 1433:1433
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - name: Execute unit test
        run: bazelisk test //... --test_env=SA_PASSWORD=${{ secrets.SA_PASSWORD }}
      - name: Get bazel-testlogs path
        id: bazel-testlogs
        run: |
          echo "::set-output name=dir::$(bazelisk info bazel-testlogs)"
      - uses: actions/upload-artifact@v2
        with:
          name: testlogs
          path: ${{ steps.bazel-testlogs.outputs.dir }}/**/test.log
          retention-days: 1
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - name: Linting T-SQL
        run: npx tsqllint --config ./tsqllintrc sql/src
  play:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: bazelisk run //sql:deploy